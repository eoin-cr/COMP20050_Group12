import java.util.HashMap;

public class Output {
    public static void Welcome () {
        // ASCII art from https://patorjk.com/software/taag/#p=testall&f=Bulbhead&t=CASCADIA
//        System.out.println(
//            "___/\\/\\/\\/\\/\\______/\\/\\________/\\/\\/\\/\\/\\____/\\/\\/\\/\\/\\______/\\/\\______/\\/\\/\\/\\/\\____/\\/\\/\\/\\______/\\/\\____\n" +
//            "/\\/\\____________/\\/\\/\\/\\____/\\/\\__________/\\/\\____________/\\/\\/\\/\\____/\\/\\____/\\/\\____/\\/\\______/\\/\\/\\/\\___        \n" +
//            "/\\/\\__________/\\/\\____/\\/\\____/\\/\\/\\/\\____/\\/\\__________/\\/\\____/\\/\\__/\\/\\____/\\/\\____/\\/\\____/\\/\\____/\\/\\_        \n" +
//            "/\\/\\__________/\\/\\/\\/\\/\\/\\__________/\\/\\__/\\/\\__________/\\/\\/\\/\\/\\/\\__/\\/\\____/\\/\\____/\\/\\____/\\/\\/\\/\\/\\/\\_        \n" +
//            "__/\\/\\/\\/\\/\\__/\\/\\____/\\/\\__/\\/\\/\\/\\/\\______/\\/\\/\\/\\/\\__/\\/\\____/\\/\\__/\\/\\/\\/\\/\\____/\\/\\/\\/\\__/\\/\\____/\\/\\_        \n" +
//            "____________________________________________________________________________________________________________\n"
//        );
//
//        System.out.println(
//            "________/\\\\\\\\\\\\\\\\\\_____/\\\\\\\\\\\\\\\\\\________/\\\\\\\\\\\\\\\\\\\\\\__________/\\\\\\\\\\\\\\\\\\_____/\\\\\\\\\\\\\\\\\\_____/\\\\\\\\\\\\\\\\\\\\\\\\_____/\\\\\\\\\\\\\\\\\\\\\\_____/\\\\\\\\\\\\\\\\\\____\n" +
//            "_____/\\\\\\////////____/\\\\\\\\\\\\\\\\\\\\\\\\\\____/\\\\\\/////////\\\\\\_____/\\\\\\////////____/\\\\\\\\\\\\\\\\\\\\\\\\\\__\\/\\\\\\////////\\\\\\__\\/////\\\\\\///____/\\\\\\\\\\\\\\\\\\\\\\\\\\__\n" +
//            "___/\\\\\\/____________/\\\\\\/////////\\\\\\__\\//\\\\\\______\\///____/\\\\\\/____________/\\\\\\/////////\\\\\\_\\/\\\\\\______\\//\\\\\\_____\\/\\\\\\______/\\\\\\/////////\\\\\\_\n" +
//            "__/\\\\\\_____________\\/\\\\\\_______\\/\\\\\\___\\////\\\\\\__________/\\\\\\_____________\\/\\\\\\_______\\/\\\\\\_\\/\\\\\\_______\\/\\\\\\_____\\/\\\\\\_____\\/\\\\\\_______\\/\\\\\\_\n" +
//            "_\\/\\\\\\_____________\\/\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\______\\////\\\\\\______\\/\\\\\\_____________\\/\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\_\\/\\\\\\_______\\/\\\\\\_____\\/\\\\\\_____\\/\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\_\n" +
//            "_\\//\\\\\\____________\\/\\\\\\/////////\\\\\\_________\\////\\\\\\___\\//\\\\\\____________\\/\\\\\\/////////\\\\\\_\\/\\\\\\_______\\/\\\\\\_____\\/\\\\\\_____\\/\\\\\\/////////\\\\\\_\n" +
//            "__\\///\\\\\\__________\\/\\\\\\_______\\/\\\\\\__/\\\\\\______\\//\\\\\\___\\///\\\\\\__________\\/\\\\\\_______\\/\\\\\\_\\/\\\\\\_______/\\\\\\______\\/\\\\\\_____\\/\\\\\\_______\\/\\\\\\_\n" +
//            "____\\////\\\\\\\\\\\\\\\\\\_\\/\\\\\\_______\\/\\\\\\_\\///\\\\\\\\\\\\\\\\\\\\\\/______\\////\\\\\\\\\\\\\\\\\\_\\/\\\\\\_______\\/\\\\\\_\\/\\\\\\\\\\\\\\\\\\\\\\\\/____/\\\\\\\\\\\\\\\\\\\\\\_\\/\\\\\\_______\\/\\\\\\_\n" +
//            "_______\\/////////__\\///________\\///____\\///////////___________\\/////////__\\///________\\///__\\////////////_____\\///////////__\\///________\\///__\n"
//        );
        System.out.println(
                """
                                  _____                    _____                    _____                    _____                    _____                    _____                    _____                    _____          \s
                                 /\\    \\                  /\\    \\                  /\\    \\                  /\\    \\                  /\\    \\                  /\\    \\                  /\\    \\                  /\\    \\         \s
                                /::\\    \\                /::\\    \\                /::\\    \\                /::\\    \\                /::\\    \\                /::\\    \\                /::\\    \\                /::\\    \\        \s
                               /::::\\    \\              /::::\\    \\              /::::\\    \\              /::::\\    \\              /::::\\    \\              /::::\\    \\               \\:::\\    \\              /::::\\    \\       \s
                              /::::::\\    \\            /::::::\\    \\            /::::::\\    \\            /::::::\\    \\            /::::::\\    \\            /::::::\\    \\               \\:::\\    \\            /::::::\\    \\      \s
                             /:::/\\:::\\    \\          /:::/\\:::\\    \\          /:::/\\:::\\    \\          /:::/\\:::\\    \\          /:::/\\:::\\    \\          /:::/\\:::\\    \\               \\:::\\    \\          /:::/\\:::\\    \\     \s
                            /:::/  \\:::\\    \\        /:::/__\\:::\\    \\        /:::/__\\:::\\    \\        /:::/  \\:::\\    \\        /:::/__\\:::\\    \\        /:::/  \\:::\\    \\               \\:::\\    \\        /:::/__\\:::\\    \\    \s
                           /:::/    \\:::\\    \\      /::::\\   \\:::\\    \\       \\:::\\   \\:::\\    \\      /:::/    \\:::\\    \\      /::::\\   \\:::\\    \\      /:::/    \\:::\\    \\              /::::\\    \\      /::::\\   \\:::\\    \\   \s
                          /:::/    / \\:::\\    \\    /::::::\\   \\:::\\    \\    ___\\:::\\   \\:::\\    \\    /:::/    / \\:::\\    \\    /::::::\\   \\:::\\    \\    /:::/    / \\:::\\    \\    ____    /::::::\\    \\    /::::::\\   \\:::\\    \\  \s
                         /:::/    /   \\:::\\    \\  /:::/\\:::\\   \\:::\\    \\  /\\   \\:::\\   \\:::\\    \\  /:::/    /   \\:::\\    \\  /:::/\\:::\\   \\:::\\    \\  /:::/    /   \\:::\\ ___\\  /\\   \\  /:::/\\:::\\    \\  /:::/\\:::\\   \\:::\\    \\ \s
                        /:::/____/     \\:::\\____\\/:::/  \\:::\\   \\:::\\____\\/::\\   \\:::\\   \\:::\\____\\/:::/____/     \\:::\\____\\/:::/  \\:::\\   \\:::\\____\\/:::/____/     \\:::|    |/::\\   \\/:::/  \\:::\\____\\/:::/  \\:::\\   \\:::\\____\\\s
                        \\:::\\    \\      \\::/    /\\::/    \\:::\\  /:::/    /\\:::\\   \\:::\\   \\::/    /\\:::\\    \\      \\::/    /\\::/    \\:::\\  /:::/    /\\:::\\    \\     /:::|____|\\:::\\  /:::/    \\::/    /\\::/    \\:::\\  /:::/    /\s
                         \\:::\\    \\      \\/____/  \\/____/ \\:::\\/:::/    /  \\:::\\   \\:::\\   \\/____/  \\:::\\    \\      \\/____/  \\/____/ \\:::\\/:::/    /  \\:::\\    \\   /:::/    /  \\:::\\/:::/    / \\/____/  \\/____/ \\:::\\/:::/    / \s
                          \\:::\\    \\                       \\::::::/    /    \\:::\\   \\:::\\    \\       \\:::\\    \\                       \\::::::/    /    \\:::\\    \\ /:::/    /    \\::::::/    /                    \\::::::/    /  \s
                           \\:::\\    \\                       \\::::/    /      \\:::\\   \\:::\\____\\       \\:::\\    \\                       \\::::/    /      \\:::\\    /:::/    /      \\::::/____/                      \\::::/    /   \s
                            \\:::\\    \\                      /:::/    /        \\:::\\  /:::/    /        \\:::\\    \\                      /:::/    /        \\:::\\  /:::/    /        \\:::\\    \\                      /:::/    /    \s
                             \\:::\\    \\                    /:::/    /          \\:::\\/:::/    /          \\:::\\    \\                    /:::/    /          \\:::\\/:::/    /          \\:::\\    \\                    /:::/    /     \s
                              \\:::\\    \\                  /:::/    /            \\::::::/    /            \\:::\\    \\                  /:::/    /            \\::::::/    /            \\:::\\    \\                  /:::/    /      \s
                               \\:::\\____\\                /:::/    /              \\::::/    /              \\:::\\____\\                /:::/    /              \\::::/    /              \\:::\\____\\                /:::/    /       \s
                                \\::/    /                \\::/    /                \\::/    /                \\::/    /                \\::/    /                \\::/____/                \\::/    /                \\::/    /        \s
                                 \\/____/                  \\/____/                  \\/____/                  \\/____/                  \\/____/                  ~~                       \\/____/                  \\/____/         \s""".indent(1)
        );
        try {
            Thread.sleep(300);
        } catch (InterruptedException ignored) {}

        System.out.println("Welcome to Cascadia!");

        // another sleep call
        try {
            Thread.sleep(300);
        } catch (InterruptedException ignored) {}
    }

    public static void clearScreen() {
        System.out.print("\033[H\033[2J");
        System.out.flush();
    }
    
    public static void printPlayers(String[] playerNames) { // used in Game class
    	System.out.println();
        System.out.println("The player list is:");
    
        for (int i = 0; i < playerNames.length; i++) {
     	   System.out.println((i+1)+ ": " + playerNames[i]);
        }
        System.out.println();
    }

	public static void displayTileTokenPairs(HashMap<HabitatTile, WildlifeToken> tileTokenPairs) {
		//not sure how to do display of tiles and tokens here ??
    	//depends on drawtile class i guess - eoin have a look whenever
    	System.out.println();
    	System.out.println("The current Habitat Tile + Wildlife Token pairs up for selection are: ");
    	for (HabitatTile i : tileTokenPairs.keySet()) {
    		System.out.println("Tile: " + i + ", Token: " + tileTokenPairs.get(i));
    		printHalfTile(i);
    	}
    	System.out.println();
	}

	public static void displayTileMap(Player player) {
		System.out.println("Player " + player.getPlayerName() + "'s current map of tiles are: \n");
		for (HabitatTile tile : player.getPlayerTiles()) {
			printHalfTile(tile);
		}
	}
	
	public static void displayCommands() {
		System.out.println("""
				Enter NEXT to move on to the next player,\s
				Enter MAP for your current map of Tiles,\s
				Enter TILES to see the Tiles you have in inventory,\s
				Enter TOKENS to see Wildlife Tokens you have in inventory,\s
				Enter PLACETOKEN to place a Wildlife Token on a Tile,
				Enter QUIT to quit the program.
				""");
//		System.out.println();
	}


	public static final String ANSI_RESET = "\u001B[0m";
//    public static final String ANSI_BLACK = "\u001B[30m";

	// ANSI colours to colour console text.  Indexes match with the
	// Tile.habitats enum.
	static String[] HabitatColours = {
			"\u001B[32m",
			"\u001B[36m",
			"\u001B[34m",
			"\u001B[37m",
			"\u001B[33m"
	};

//    public static void PrintFullTile (HabitatTile tile) {
//        // NOTE: only draws the first habitat colour for now
////        System.out.println(tile.habitat1.ordinal());
//        System.out.println(HabitatColours[tile.getHabitat1().ordinal()] +
//                "|||| |||| |||| ||||\n" +
//                "||||           ||||\n" +
//                "||||           ||||\n" +
//                "|||| |||| |||| ||||\n" +
//                ANSI_RESET
//                );
//    }

	// note that these printing things are all pretty primitive atm
	public static void printHalfTile (HabitatTile tile) {
		System.out.println(HabitatColours[tile.getHabitat1().ordinal()] +
				"|||| |||| |||| ||||\n" +
				"||||           ||||\n" +
				ANSI_RESET +
				HabitatColours[tile.getHabitat2().ordinal()] +
				"||||           ||||\n" +
				"|||| |||| |||| ||||\n" +
				ANSI_RESET
		);


	}
}
